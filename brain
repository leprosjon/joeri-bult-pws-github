class AIAction {
    constructor(isJump, holdTime, xDirection) {
        this.isJump = isJump;
        this.holdTime = holdTime;
        this.xDirection = xDirection;

    }

}

let jumpChance = 0.5; 
let chanceOfFullJump = 0.2;

class Brain {

    constructor(size, randomiseInstructions = true) {
        this.instructions = [];
        this.currentInstructionNumber = 0;
        if (randomiseInstructions)
            this.randomize(size);
        this.parentReachedBestLevelAtActionNo = 0;
    }

    randomize(size) {
        for (let i = 0; i < size; i++) {
            this.instructions[i] = this.getRandomAction();
        }
    }

    getRandomAction() {
        let isJump = false;

        if (random() > jumpChance) {
            isJump = true;
        }

        let holdTime = random(0.1, 1);
        if(random()<chanceOfFullJump){
            holdTime = 1;
        }


        let directions = [-1, -1, -1, 0, 1, 1, 1]
        let xDirection = random(directions)


        return new AIAction(isJump, holdTime, xDirection)
    }

    getNextAction() {
        if(this.currentInstructionNumber >= this.instructions.length){
            return null;
        }
        this.currentInstructionNumber += 1;
        return this.instructions[this.currentInstructionNumber - 1];
    }
}
